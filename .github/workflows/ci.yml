name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Check formatting and linting first for early failure
  check:
    name: Check Formatting & Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, clippy
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            libudev-dev \
            libwayland-dev \
            libxkbcommon-dev
      
      - name: Check formatting
        run: cargo fmt -- --check
      
      - name: Run clippy
        run: cargo clippy -- -D warnings

  # Windows build
  windows:
    name: Windows Build
    runs-on: windows-latest
    needs: check  # Only run after linting passes
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build
        run: cargo build --release
      
      - name: Run tests
        run: cargo test --release
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: target/release/bevy_game.exe

  # Linux build
  linux:
    name: Linux Build
    runs-on: ubuntu-latest
    needs: check  # Only run after linting passes
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            libudev-dev \
            libwayland-dev \
            libxkbcommon-dev \
            libx11-dev \
            libxi-dev \
            libgl1-mesa-dev \
            libglu1-mesa-dev
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build
        run: cargo build --release
      
      - name: Run tests
        run: cargo test --release
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: target/release/bevy_game

  # WebAssembly build
  wasm:
    name: WebAssembly Build
    runs-on: ubuntu-latest
    needs: check  # Only run after linting passes
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: wasm32-unknown-unknown
      
      - name: Install wasm-bindgen-cli
        run: |
          cargo install wasm-bindgen-cli --version 0.2.92
      
      - name: Install trunk
        run: |
          wget -qO- https://github.com/thedodd/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
          sudo mv trunk /usr/local/bin/
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-wasm-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-wasm-cargo-
      
      - name: Build WASM
        run: |
          rustup target add wasm32-unknown-unknown
          cargo build --release --target wasm32-unknown-unknown
      
      - name: Prepare WASM artifacts
        run: |
          mkdir -p wasm-dist
          cp target/wasm32-unknown-unknown/release/bevy_game.wasm wasm-dist/
      
      - name: Upload WASM artifact
        uses: actions/upload-artifact@v4
        with:
          name: wasm-build
          path: wasm-dist/
